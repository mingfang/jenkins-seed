namespaces:
  default:
    configmaps:
    - name: deepstream
      data:
        config.yml: |-
          # General
          # Show the deepstream logo on startup (highly recommended)
          showLogo: true
          # Log messages with this level and above. Valid levels are DEBUG, INFO, WARN, ERROR, OFF
          logLevel: INFO
          # Directory where all plugins reside
          libDir: /var/lib/deepstream

          # SSL Configuration
          sslKey: null
          sslCert: null
          sslCa: null

          # Connection Endpoint Configuration
          # to disable, replace configuration with null eg. `http: null`
          connectionEndpoints:
            websocket:
              type: default
              options:
                  # port for the websocket server
                  port: 6020
                  # host for the websocket server
                  host: 0.0.0.0
                  # url path websocket connections connect to
                  urlPath: /deepstream
                  # url path for http health-checks, GET requests to this path will return 200 if deepstream is alive
                  healthCheckPath: /health-check
                  # the amount of milliseconds between each ping/heartbeat message
                  heartbeatInterval: 30000
                  # the amount of milliseconds that writes to sockets are buffered
                  outgoingBufferTimeout: 0

                  # Security
                  # amount of time a connection can remain open while not being logged in
                  # or false for no timeout
                  unauthenticatedClientTimeout: 180000
                  # invalid login attempts before the connection is cut
                  maxAuthAttempts: 3
                  # if true, the logs will contain the cleartext username / password of invalid login attempts
                  logInvalidAuthData: false
                  # maximum allowed size of an individual message in bytes
                  maxMessageSize: 1048576
            http:
              type: default
              options:
                # port for the http server
                port: 8080
                # host for the http server
                host: 0.0.0.0
                # allow 'authData' parameter in POST requests, if disabled only token and OPEN auth is
                # possible
                allowAuthData: true
                # enable the authentication endpoint for requesting tokens/userData.
                # note: a custom authentication handler is required for token generation
                enableAuthEndpoint: false
                # path for authentication requests
                authPath: /auth
                # path for POST requests
                postPath: /
                # path for GET requests
                getPath: /
                # url path for http health-checks, GET requests to this path will return 200 if deepstream is alive
                healthCheckPath: /health-check

                # -- CORS --
                # if disabled, only requests with an 'Origin' header matching one specified under 'origins'
                # below will be permitted and the 'Access-Control-Allow-Credentials' response header will be
                # enabled
                allowAllOrigins: true
                # a list of allowed origins
                origins:
                  - 'https://example.com'

          # Logger Configuration
          # logger:
          #   # use either the default logger
          #   type: default
          #    options:
          #      colors: true
          #      # value of logLevel (line 4) will always overwrite this value
          #      logLevel: INFO

          #   # or the winston logger
          #   name: winston
          #   options:
          #     # specify a list of transports (console, file, time)
          #     -
          #       type: console
          #       options:
          #         # value of logLevel (line 4) will always overwrite this value
          #         level: info
          #         colorize: true
          #     -
          #       type: time
          #       options:
          #         filename: ../var/deepstream

          #   # or a custom logger
          #   path: ./my-custom-logger

          # Plugin Configuration
          plugins:
          #  message:
          #    name: redis
          #    options:
          #      host: deepstream-redis
          #      port: 6379
            cache:
              name: redis
              options:
                host: deepstream-redis
                port: 6379
            storage:
              name: rethinkdb
              options:
                host: deepstream-rethinkdb
                port: 28015
                splitChar: /

          # Storage options
          # A list of prefixes that, when a record starts with one of the prefixes the
          # records data won't be stored in the db
          # storageExclusionPrefixes:
          #   - no-storage/
          #   - temporary-data/
          # A list of prefixes that, when a record is updated via setData and it matches one of the prefixes
          # it will be permissioned and written directly to the cache and storage layers
          # storageHotPathPrefixes:
          #   - analytics/
          #   - metrics/

          auth:
            type: none

            # type: file
            # options:
            #   path: ./users.yml # Path to the user file. Can be json, js or yml
            #   hash: 'md5' # the name of a HMAC digest algorithm
            #   iterations: 100 # the number of times the algorithm should be applied
            #   keyLength: 32 # the length of the resulting key

            # getting permissions from a http webhook
            # type: http
            # options:
            #   # a post request will be send to this url on every incoming connection
            #   endpointUrl: http://localhost:6004
            #   # any of these will be treated as access granted
            #   permittedStatusCodes: [ 200 ]
            #   # if the webhook didn't respond after this amount of milliseconds, the connection will be rejected
            #   requestTimeout: 2000

          # Permissioning
          permission:
            # Only config or custom permissionHandler at the moment
            type: config
            options:
              # Path to the permissionFile. Can be json, js or yml
              path: ./permissions.yml
              # Amount of times nested cross-references will be loaded. Avoids endless loops
              maxRuleIterations: 3
              # PermissionResults are cached to increase performance. Lower number means more loading
              cacheEvacuationInterval: 60000

          # Timeouts (in milliseconds)
          # Timeout for client RPC acknownledgement
          rpcAckTimeout: 1000
          # Timeout for actual RPC provider response
          rpcTimeout: 10000
          # Maximum time permitted to fetch from cache
          cacheRetrievalTimeout: 1000
          # Maximum time permitted to fetch from storage
          storageRetrievalTimeout: 2000
          # Plugin startup timeout â€“ deepstream init will fail if any plugins fail to emit a 'done' event within this timeout
          dependencyInitialisationTimeout: 2000
          # The amount of time to wait for a provider to acknowledge or reject a listen request
          listenResponseTimeout: 500
          # The amount of time a broadcast will wait (to allow broadcast coalescing). -1 means disabled.
          broadcastTimeout: 0

    services:
    - name: deepstream
      ports:
      - {name: http, port: 8080}
      - {name: websocket, port: 6020}
      annotations:
        nginx:
        - http:
          - server: deepstream.*
            paths:
            - path: /
              port: 8080
            - path: /deepstream
              port: 6020
      pod:
        containers:
        - name: deepstream
          image: deepstreamio/deepstream.io
          volumeMounts:
          - name: configmap
            mountPath: /etc/deepstream/config.yml
            subPath: config.yml
        volumes:
        - name: configmap
          configMap:
            name: deepstream

    - name: deepstream-search-provider
      pod:
        containers:
        - name: deepstream-search-provider
          image: deepstreamio/provider-search-rethinkdb
          env:
          - {name: DEEPSTREAM_HOST, value: "deepstream"}
          - {name: DEEPSTREAM_PORT, value: "8080"}
          - {name: RETHINKDB_HOST, value: "deepstream-rethinkdb"}

    - name: deepstream-redis
      ports:
      - port: 6379
      pod:
        containers:
        - name: redis
          image: redis:alpine

    - name: deepstream-rethinkdb
      ports:
      - {name: http, port: 8080}
      - {name: tcp, port: 28015}
      annotations:
        nginx:
        - http:
          - server: deepstream-rethinkdb.*
            paths:
            - path: /
      stateful: true
      pod:
        replicas: 2
        containers:
        - name: rethinkdb
          image: rethinkdb
          args: ["rethinkdb", "-j", "deepstream-rethinkdb-0:29015", "--bind", "all"]
