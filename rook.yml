---
# Rook

namespaces:
  rook:
    customresourcedefinitions:
    - name: clusters.ceph.rook.io
      spec:
        group: ceph.rook.io
        names:
          kind: Cluster
          listKind: ClusterList
          plural: clusters
          singular: cluster
          shortNames:
          - rcc
        scope: Namespaced
        version: v1alpha1
    - name: filesystems.ceph.rook.io
      spec:
        group: ceph.rook.io
        names:
          kind: Filesystem
          listKind: FilesystemList
          plural: filesystems
          singular: filesystem
          shortNames:
          - rcfs
        scope: Namespaced
        version: v1alpha1
    - name: objectstores.ceph.rook.io
      spec:
        group: ceph.rook.io
        names:
          kind: ObjectStore
          listKind: ObjectStoreList
          plural: objectstores
          singular: objectstore
          shortNames:
          - rco
        scope: Namespaced
        version: v1alpha1
    - name: pools.ceph.rook.io
      spec:
        group: ceph.rook.io
        names:
          kind: Pool
          listKind: PoolList
          plural: pools
          singular: pool
          shortNames:
          - rcp
        scope: Namespaced
        version: v1alpha1
    - name: volumes.rook.io
      spec:
        group: rook.io
        names:
          kind: Volume
          listKind: VolumeList
          plural: volumes
          singular: volume
          shortNames:
          - rv
        scope: Namespaced
        version: v1alpha2

    clusterRoles:
    - name: rook-ceph-operator
      rules:
      - apiGroups:
        - ""
        resources:
        - namespaces
        - serviceaccounts
        - secrets
        - pods
        - services
        - nodes
        - nodes/proxy
        - configmaps
        - events
        - persistentvolumes
        - persistentvolumeclaims
        verbs:
        - get
        - list
        - watch
        - patch
        - create
        - update
        - delete
      - apiGroups:
        - extensions
        resources:
        - deployments
        - daemonsets
        - replicasets
        verbs:
        - get
        - list
        - watch
        - create
        - update
        - delete
      - apiGroups:
        - rbac.authorization.k8s.io
        resources:
        - clusterroles
        - clusterrolebindings
        - roles
        - rolebindings
        verbs:
        - get
        - list
        - watch
        - create
        - update
        - delete
      - apiGroups:
        - storage.k8s.io
        resources:
        - storageclasses
        verbs:
        - get
        - list
        - watch
        - delete
      - apiGroups:
        - ceph.rook.io
        resources:
        - "*"
        verbs:
        - "*"
      - apiGroups:
        - rook.io
        resources:
        - "*"
        verbs:
        - "*"

    services:
    - name: rook-ceph-operator
      clusterRoleBinding: rook-ceph-operator
      pod:
        replicas: 1
        containers:
        - name: rook-ceph-operator
          image: rook/ceph:master
          imagePullPolicy: Always
          args: ["ceph", "operator"]
          env:
          # To disable RBAC, uncomment the following:
          # - name: RBAC_ENABLED
          #  value: "false"
          # Rook Agent toleration. Will tolerate all taints with all keys.
          # Choose between NoSchedule, PreferNoSchedule and NoExecute:
          # - name: AGENT_TOLERATION
          #  value: "NoSchedule"
          # (Optional) Rook Agent toleration key. Set this to the key of the taint you want to tolerate
          # - name: AGENT_TOLERATION_KEY
          #  value: "<KeyOfTheTaintToTolerate>"
          # Set the path where the Rook agent can find the flex volumes
          - name: FLEXVOLUME_DIR_PATH
            value: "/var/lib/kubelet/volumeplugins"
          # Allow rook to create multiple file systems. Note: This is considered
          # an experimental feature in Ceph as described at
          # http://docs.ceph.com/docs/master/cephfs/experimental-features/#multiple-filesystems-within-a-ceph-cluster
          # which might cause mons to crash as seen in https://github.com/rook/rook/issues/1027
          - name: ROOK_ALLOW_MULTIPLE_FILESYSTEMS
            value: "false"
          # The interval to check if every mon is in the quorum.
          - name: ROOK_MON_HEALTHCHECK_INTERVAL
            value: "45s"
          # The duration to wait before trying to failover or remove/replace the
          # current mon with a new mon (useful for compensating flapping network).
          - name: ROOK_MON_OUT_TIMEOUT
            value: "300s"
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace

---
# Ceph Cluster

namespaces:
  rook-ceph:
    customresources:
    - name: rook-ceph-cluster
      resource:
        apiVersion: ceph.rook.io/v1alpha1
        kind: Cluster
        metadata:
          name: rook-ceph
          namespace: rook-ceph
        spec:
          dataDirHostPath: /var/lib/rook
          monCount: 1
          network:
            hostNetwork: false
          storage:
            useAllNodes: true
            useAllDevices: false
            deviceFilter: xvdf
            location:
            config:
              storeType: bluestore
              databaseSizeMB: "1024"
              journalSizeMB: "1024"

    - name: rook-pool
      resource:
        apiVersion: ceph.rook.io/v1alpha1
        kind: Pool
        metadata:
          name: replicapool
          namespace: rook-ceph
        spec:
          replicated:
            size: 2

    - name: rook-storageclass
      resource:
        apiVersion: storage.k8s.io/v1
        kind: StorageClass
        metadata:
           name: rook-ceph-block
        provisioner: ceph.rook.io/block
        parameters:
          pool: replicapool
          clusterName: rook-ceph

#  default:
#    persistentVolumeClaims:
#    - name: rook-test-pvc
#      spec:
#        storageClassName: rook-ceph-block
#        accessModes:
#        - ReadWriteOnce
#        resources:
#          requests:
#            storage: 10Gi
